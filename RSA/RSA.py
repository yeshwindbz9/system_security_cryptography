# -*- coding: utf-8 -*-
"""
Created on Fri Mar 20 00:29:37 2020
@author: yeshw
"""
#RSA algorithm
print('-'*40)
print('Rivest-Shamir-Adleman Algorithm')
print('-'*40)
#gcd function
def gcd(a,b):
    if b == 0:
        return a
    else:
        return gcd(b,a%b)
#RSA function
def RSA():
    # select very large prime numbers p,q
    p = int(input('ENTER THE VALUE OF p -> '))
    q = int(input('ENTER THE VALUE OF q -> '))
    n = p * q #calculate n
    phi_n = (p-1) * (q-1) #calculate ∅(n)
    #select public key e for such that 1<e<∅(n)
    calc_e = input('HIT Y CUSTOM e, HIT n FOR AUTO e -> ')
    if calc_e == 'y' or calc_e == 'Y':
        e = int(input('ENTER THE VALUE OF e -> '))
    elif calc_e == 'n' or calc_e == 'N':
        for e in range(2,phi_n):
            if gcd(e,phi_n) == 1:
                break
        print('\nAUTOGENERATED VALUE OF e -> ',e)
    for j in range(1,10):
        if (1+j*phi_n) % e == 0:
            d = int((1+j*phi_n) / e)
            break
    print('\nCALCULATED PRIVATE KEY d -> ',d)
    return n,phi_n,e,d
print('\n------\FOR SENDER SIDE\------')
n1,phi_n1,e1,d1 = RSA() #get sender info
print('-'*40)
print('\n------\FOR RECIEVER SIDE\------')
n2,phi_n2,e2,d2 = RSA() #get reciever info
print('-'*40)
#encryption or decryption ?
choice = int(input('HIT 1 FOR ENCRYPTION, 0 FOR DECRYPTION -> '))
if choice == 1:
    M = int(input('MESSAGE TEXT VALUE M -> ')) #input message
    #RSA digital signature
    print('\n------\DIGITAL SIGNATURE\------')
    #encrypt message M using d to produce C
    C = (M ** d1) % n1
    print('\nSIGNATURE ENCRYPTED CIPHER TEXT VALUE C -> ',C)
    #RSA crypto system
    print('\n------\ENCRYPTED CIPHERVALUE\------')
    C = (M ** e2) % n2
    print('\nENCRYPTED CIPHER TEXT VALUE C -> ',C)
elif choice == 0:
    C = int(input('CIPHER TEXT VALUE C -> ')) #input cipher
    #RSA digital signature
    print('\n------\DIGITAL SIGNATURE\------')
    #decrypt message C using e to produce M
    M = (C ** e1) % n1
    print('\nSIGNATURE DECRYPTED MESSAGE TEXT VALUE M -> ',M)
    #RSA crypto system
    print('\n------\DECRYPTED MESSAGE TEXT VALUE\------')
    M = (C ** d2) % n2
    print('\nDECRYPTED MESSAGE TEXT VALUE M -> ',M)
else:
    print('OUT OF CONSTRAINTS')    



